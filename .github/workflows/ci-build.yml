name: Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read

env:
  MAVEN_OPTS: >-
    -Dhttp.keepAlive=false
    -Dmaven.wagon.http.pool=false
    -Dmaven.wagon.http.retryhandler.count=5
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=240

# Cancel running jobs when a new push happens to the same branch as otherwise it will
# tie up too many resources without providing much value.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Linux
  build-linux:
    runs-on: ubuntu-24.04
    container:
      image: centos:7
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]
    env:
      CC:  ${{ matrix.arch == 'x86_64' && 'gcc'     || 'aarch64-linux-gnu-gcc' }}
      CXX: ${{ matrix.arch == 'x86_64' && 'g++'     || 'aarch64-linux-gnu-g++' }}
      AR:  ${{ matrix.arch == 'x86_64' && 'ar'      || 'aarch64-linux-gnu-ar' }}
      STRIP: ${{ matrix.arch == 'x86_64' && 'strip' || 'aarch64-linux-gnu-strip' }}
      CLASSIFIER: linux-${{ matrix.arch }}
    steps:

      - name: Fix CentOS 7 mirror
        run: |
          sed -i 's|^mirrorlist=|#mirrorlist=|g' /etc/yum.repos.d/CentOS-*.repo
          sed -i 's|^#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' \
            /etc/yum.repos.d/CentOS-*.repo
          yum clean all
          yum makecache -y

      - name: Install tools
        run: |
          yum -y groupinstall "Development Tools"
          yum -y install epel-release
          yum -y install apr-devel openssl-devel cmake3 ninja-build git which
          yum -y install java-11-openjdk-devel
          ln -sf /usr/bin/cmake3 /usr/bin/cmake

      - name: Install scl-rh
        run: |
          yum -y install centos-release-scl-rh
          sed -i 's|^mirrorlist=|#mirrorlist=|g' /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo
          sed -i 's|^#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' \
            /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo
          yum clean all
          yum makecache -y

      - name: Install cross toolchain (arm64 only)
        if: matrix.arch == 'aarch64'
        run: |
          yum -y install gcc-aarch64-linux-gnu gcc-c++-aarch64-linux-gnu

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build netty-tcnative
        run: |
          chmod +x ./mvnw \
            && ./mvnw clean package -DskipTests -Dclassifier=${{ env.CLASSIFIER }}

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: build-${{ matrix.arch }}-jars
          path: |
            **/target/*.jar

      - uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: build-${{ matrix.arch }}-target
          path: |
            **/target/surefire-reports/
            **/hs_err*.log

  # Windows
  build-windows:
    strategy:
      matrix:
        arch: [ windows-2025 ]
    runs-on: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: temurin

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Configuring Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86_amd64

      - name: Install tools
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install ninja nasm openssl

      - name: Set up Environment Variables
        run: |
          echo "OPENSSL_INCLUDE_DIR=C:\Program Files\OpenSSL\include" >> $env:GITHUB_ENV
          echo "OPENSSL_LIB_DIR=C:\Program Files\OpenSSL\lib\VC\x64\MD" >> $env:GITHUB_ENV

      - name: Build netty-tcnative
        run: ./mvnw.cmd clean package

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: build-${{ matrix.arch }}-jars
          path: |
            **/target/*.jar

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: build-${{ matrix.arch }}-target
          path: |
            **/target/surefire-reports/
            **/hs_err*.log